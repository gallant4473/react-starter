$sprites: (
    'arrow-left': "data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 451.847 451.847'%3e%3cg transform='matrix(0.95099 0 0 0.95099 11.0725 11.0725)'%3e%3cg%3e %3cpath d='M97.141%2c225.92c0-8.095%2c3.091-16.192%2c9.259-22.366L300.689%2c9.27c12.359-12.359%2c32.397-12.359%2c44.751%2c0 c12.354%2c12.354%2c12.354%2c32.388%2c0%2c44.748L173.525%2c225.92l171.903%2c171.909c12.354%2c12.354%2c12.354%2c32.391%2c0%2c44.744 c-12.354%2c12.365-32.386%2c12.365-44.745%2c0l-194.29-194.281C100.226%2c242.115%2c97.141%2c234.018%2c97.141%2c225.92z' data-original='black' class='active-path' data-old_color='%23020000' fill='red'/%3e %3c/g%3e%3c/g%3e %3c/svg%3e"
);

$sizes: (
    'arrow-left': (
        'width': 451.847px,
        'height': 451.847px
    )
);

$variables: (
    /* EMPTY */
);

// https://github.com/waldemarfm/sass-svg-uri/blob/v1.0.0/_svg-uri.scss
@function sprite-str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search);

    @if type-of($replace) == 'null' {
        $replace: '';
    }

    @if ( $index ) {
        @return str-slice($string, 1, $index - 1) + $replace + sprite-str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}

@function sprite-svg-uri($value) {
    $encoded: '';
    $slice: 2000;
    $index: 0;

    @for $i from 1 through ceil(str-length($value) / $slice) {
        $chunk: str-slice($value, $index, $index + $slice - 1);
        $chunk: sprite-str-replace($chunk, '"', "'");
        $chunk: sprite-str-replace($chunk, '<', '%3C');
        $chunk: sprite-str-replace($chunk, '>', '%3E');
        $chunk: sprite-str-replace($chunk, '&', '%26');
        $chunk: sprite-str-replace($chunk, '#', '%23');
        $encoded: #{$encoded}#{$chunk};
        $index: $index + $slice;
    }

    @return $encoded;
}

@mixin sprite($name, $user-variables: (), $include-size: false) {
    $sprite: map-get($sprites, $name);

    // Inject variables
    $default-variables: map-get($variables, $name);
    @if type-of($default-variables) == 'map' {
        @each $key, $value in map-merge($default-variables, $user-variables) {
            @if ( not map-has-key($default-variables, $key) ) {
                @warn 'Sprite \'#{$name}\' does not support variable named \'#{$key}\'';
            }

            $sprite: sprite-str-replace($sprite, '___#{$key}___', sprite-svg-uri(quote(#{$value})));
        }
    } @else if type-of($user-variables) == 'map' {
        @warn 'Sprite \'#{$name}\' does not contain any variables';
    }

    background: url($sprite) center no-repeat;

    @if $include-size {
        $size: map-get($sizes, $name);
        background-size: map-get($size, width) map-get($size, height);
    }
}
